[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Preface",
    "section": "",
    "text": "Preface\nSobre esse projeto…"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "basics.html#dplyr-verbs",
    "href": "basics.html#dplyr-verbs",
    "title": "2  Tidyverse basics",
    "section": "2.1 {dplyr} verbs",
    "text": "2.1 {dplyr} verbs\n\nmutate()\nfilter()\nselect()\narrange()\nsummarise()\n\n\niris\n\n\n\n  \n\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\ndplyr::glimpse(iris)\n\nRows: 150\nColumns: 5\n$ Sepal.Length &lt;dbl&gt; 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.~\n$ Sepal.Width  &lt;dbl&gt; 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.~\n$ Petal.Length &lt;dbl&gt; 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.~\n$ Petal.Width  &lt;dbl&gt; 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.~\n$ Species      &lt;fct&gt; setosa, setosa, setosa, setosa, setosa, setosa, setosa, s~\n\n\n\n2.1.1 mutate\n\\[\nA=\\pi lw\n\\]\n\nmutate(.data = iris, area_Sepal = pi*Sepal.Length*Sepal.Width)\n\n\n\n  \n\n\n\n\niris %&gt;% mutate(area_Sepal = pi*Sepal.Length*Sepal.Width)\n\n\n\n  \n\n\n\nVocê errou a coluna petal.lenght e precisa multiplicar por 2.\n\niris %&gt;% mutate(Petal.Length = Petal.Length*2)\n\n\n\n  \n\n\n\nUsando informações externas\n\niris %&gt;% mutate(reino = \"planta\")\n\n\n\n  \n\n\n\n\niris %&gt;% mutate(reino = c(\"planta\",\"fungo\"))\n\n\niris %&gt;% mutate(reino = 1:150)\n\n\n\n  \n\n\n\n\niris %&gt;% mutate(reino = rep(LETTERS[1:5],30))\n\n\n\n  \n\n\n\n\niris %&gt;% mutate(Code = paste(\"spc\",Species,Petal.Length,Petal.Width,\n                             sep = '_'))\n\n\n\n  \n\n\n\n\niris %&gt;% mutate(Code = glue:::glue(\"Spc:{Species}_Len:{Petal.Length}_Wid:{Petal.Width}\"))\n\n\n\n  \n\n\n\n\n\n2.1.2 select\nServe para selecionar colunas (variaveis).\nNota: se você estiver trabalhando com bioconductor recomendo usar dplyr::select()\n\nselect(iris, Sepal.Length)\n\n\n\n  \n\n\n\n\nselect(iris, Sepal.Length,Sepal.Width)\n\n\n\n  \n\n\n\n\n#select(iris, Sepal.Length,Sepal.Width)\niris %&gt;% select(Length = Sepal.Length,\n                Width = Sepal.Width)\n\n\n\n  \n\n\n\n\niris %&gt;% select(starts_with(\"Sepal\"))\n\n\n\n  \n\n\n\n\niris %&gt;% select(ends_with(\"Width\"))\n\n\n\n  \n\n\n\n\niris %&gt;% select(Species,ends_with(\"Width\"))\n\n\n\n  \n\n\n\n\n#Não faz muito sentido usar isso - Ou usar o que o icaro disse\n(iris_2 &lt;- iris %&gt;% select(2))\n\n\n\n  \n\n\n\n\niris_v2 &lt;- iris[,2]\n\n\n\n2.1.3 pull() - extrai o vetor\n\niris %&gt;% pull(Sepal.Width)\n\n  [1] 3.5 3.0 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 3.7 3.4 3.0 3.0 4.0 4.4 3.9 3.5\n [19] 3.8 3.8 3.4 3.7 3.6 3.3 3.4 3.0 3.4 3.5 3.4 3.2 3.1 3.4 4.1 4.2 3.1 3.2\n [37] 3.5 3.6 3.0 3.4 3.5 2.3 3.2 3.5 3.8 3.0 3.8 3.2 3.7 3.3 3.2 3.2 3.1 2.3\n [55] 2.8 2.8 3.3 2.4 2.9 2.7 2.0 3.0 2.2 2.9 2.9 3.1 3.0 2.7 2.2 2.5 3.2 2.8\n [73] 2.5 2.8 2.9 3.0 2.8 3.0 2.9 2.6 2.4 2.4 2.7 2.7 3.0 3.4 3.1 2.3 3.0 2.5\n [91] 2.6 3.0 2.6 2.3 2.7 3.0 2.9 2.9 2.5 2.8 3.3 2.7 3.0 2.9 3.0 3.0 2.5 2.9\n[109] 2.5 3.6 3.2 2.7 3.0 2.5 2.8 3.2 3.0 3.8 2.6 2.2 3.2 2.8 2.8 2.7 3.3 3.2\n[127] 2.8 3.0 2.8 3.0 2.8 3.8 2.8 2.8 2.6 3.0 3.4 3.1 3.0 3.1 3.1 3.1 2.7 3.2\n[145] 3.3 3.0 2.5 3.0 3.4 3.0\n\n\n\npull(iris_2)\n\n  [1] 3.5 3.0 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 3.7 3.4 3.0 3.0 4.0 4.4 3.9 3.5\n [19] 3.8 3.8 3.4 3.7 3.6 3.3 3.4 3.0 3.4 3.5 3.4 3.2 3.1 3.4 4.1 4.2 3.1 3.2\n [37] 3.5 3.6 3.0 3.4 3.5 2.3 3.2 3.5 3.8 3.0 3.8 3.2 3.7 3.3 3.2 3.2 3.1 2.3\n [55] 2.8 2.8 3.3 2.4 2.9 2.7 2.0 3.0 2.2 2.9 2.9 3.1 3.0 2.7 2.2 2.5 3.2 2.8\n [73] 2.5 2.8 2.9 3.0 2.8 3.0 2.9 2.6 2.4 2.4 2.7 2.7 3.0 3.4 3.1 2.3 3.0 2.5\n [91] 2.6 3.0 2.6 2.3 2.7 3.0 2.9 2.9 2.5 2.8 3.3 2.7 3.0 2.9 3.0 3.0 2.5 2.9\n[109] 2.5 3.6 3.2 2.7 3.0 2.5 2.8 3.2 3.0 3.8 2.6 2.2 3.2 2.8 2.8 2.7 3.3 3.2\n[127] 2.8 3.0 2.8 3.0 2.8 3.8 2.8 2.8 2.6 3.0 3.4 3.1 3.0 3.1 3.1 3.1 2.7 3.2\n[145] 3.3 3.0 2.5 3.0 3.4 3.0\n\n\n\n\n2.1.4 filter\nFiltra linhas de uma tabela\n\niris\n\n\n\n  \n\n\niris %&gt;% filter(Sepal.Length &gt;= 4.7)\n\n\n\n  \n\n\n\n\niris %&gt;% filter(Sepal.Length &gt;= 4.7,\n                Petal.Length &lt; 1.5)\n\n\n\n  \n\n\n\n\niris %&gt;% filter(Sepal.Length &gt;= 4.7 | Petal.Length &lt; 1.5)\n\n\n\n  \n\n\n\n\niris %&gt;% filter(Species == \"setosa\")\n\n\n\n  \n\n\n\n\niris %&gt;% filter(Species != \"setosa\")\n\n\n\n  \n\n\n\n\niris %&gt;% filter(Species %in% c(\"virginica\",\"versicolor\"))\n\n\n\n  \n\n\n\n\n\n2.1.5 arrange\nColocar a tabela em ordem (linhas).\n\niris %&gt;% arrange(Sepal.Length)\n\n\n\n  \n\n\n\n\niris %&gt;% arrange(desc(Sepal.Length))\n\n\n\n  \n\n\n\n\niris %&gt;% arrange(desc(Species))\n\n\n\n  \n\n\n\n\n#Não quer a ordem alfabética\n\n(iris_fct &lt;- iris %&gt;% mutate(Species = factor(Species,levels = c(\"versicolor\",\"setosa\",\"virginica\"))))\n\n\n\n  \n\n\n\n\niris$Species\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica\n\niris_fct$Species\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: versicolor setosa virginica\n\n\n\niris_fct %&gt;% \n  arrange(Species)\n\n\n\n  \n\n\n\n\niris %&gt;% \n  mutate(Species = factor(Species,levels = c(\"versicolor\",\"setosa\",\"virginica\"))) %&gt;% \n  arrange(Species)\n\n\n\n  \n\n\n\n\niris %&gt;% arrange(Sepal.Length,desc(Sepal.Width))\n\n\n\n  \n\n\n\n\n\n2.1.6 summarise\nCria um resumo estatistico\n\nsummarise(iris, \n          media_sepal_length = mean(Sepal.Length),\n          sd_sepal_length = sd(Sepal.Length))\n\n\n\n  \n\n\n\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\n\n\niris %&gt;% \n  count(Species)\n\n\n\n  \n\n\n\n\niris %&gt;% \n  group_by(Species) %&gt;% \n  summarise(media_sepal_length = mean(Sepal.Length),\n          sd_sepal_length = sd(Sepal.Length))\n\n\n\n  \n\n\n  #ungroup\n\n\niris %&gt;% \n  group_by(Species) %&gt;% \n  ungroup()\n\n\n\n  \n\n\n\n\n#across - mutate & summarise\n\n#?across()\n\n\nq1 &lt;- function(x) {\n  quantile(x, .25)\n}\n\nq3 &lt;- function(x) {\n  quantile(x, .75)\n}\n\nIQR &lt;- function(x) {\n  \n  q3(x) - q1(x)\n}\n\n#Todas as colunas numericas\niris %&gt;% \n  summarise(across(.cols = where(is.numeric),\n                   .fns = list(media = mean,\n                               mediana = median,\n                               maximo = max,\n                               minimo = min,\n                               desvpad = sd,\n                               Q1 = q1,\n                               Q3 = q3,\n                               IQR = IQR),\n                   .names = \"{.fn}_{.col}\"))\n\n\n\n  \n\n\n\n\niris_stats &lt;- iris %&gt;% \n  group_by(Species) %&gt;% \n  summarise(across(.cols = where(is.numeric),\n                   .fns = list(media = mean,\n                               mediana = median,\n                               maximo = max,\n                               minimo = min,\n                               desvpad = sd,\n                               Q1 = q1,\n                               Q3 = q3,\n                               IQR = IQR),\n                   .names = \"{.fn}_{.col}\"))"
  },
  {
    "objectID": "basics.html#tidyr",
    "href": "basics.html#tidyr",
    "title": "2  Tidyverse basics",
    "section": "2.2 {tidyr}",
    "text": "2.2 {tidyr}\n\niris_stats\n\n\n\n  \n\n\n\nLongos x amplo (long x wide)\nLongo: mais linhas que colunas\nAmplo: mais colunas que linhas\n\n2.2.1 Pivots\n\nlibrary(tidyr)\n(iris_stats_long &lt;- iris_stats %&gt;% \n  pivot_longer(cols = -Species,\n               names_to = \"Colunas\",\n               values_to = \"Linhas\"))\n\n\n\n  \n\n\n\n\n\n2.2.2 Separate\n\n(iris_stats_long &lt;- iris_stats_long %&gt;% \n  separate(col = Colunas,\n           into = c(\"Stat\",\"Var\"),\n           sep = \"_\") %&gt;% \n  separate(col = Var,\n           into = c(\"Org\",\"Metrica\"),\n           sep = \"\\\\.\") # palavras reservadas\n  )"
  },
  {
    "objectID": "basics.html#ggplot2",
    "href": "basics.html#ggplot2",
    "title": "2  Tidyverse basics",
    "section": "2.3 {ggplot2}",
    "text": "2.3 {ggplot2}\n\nlibrary(ggplot2)\niris %&gt;% \n  tibble::rowid_to_column() %&gt;% \n  ggplot(aes(x = rowid, y = Sepal.Length)) +\n  geom_line()\n\n\n\n\n\niris %&gt;% \n  tibble::rowid_to_column() %&gt;% \n  ggplot(aes(x = rowid, y = Sepal.Length)) +\n  geom_line(color = \"blue\")+\n  geom_line(aes(y = Sepal.Width))\n\n\n\n\n\niris %&gt;% \n  tibble::rowid_to_column() %&gt;% \n  pivot_longer(cols = starts_with(\"Sepal\"),\n               names_to = \"Vars\",values_to = \"Vals\") %&gt;%\n  ggplot(aes(x = rowid, y = Vals, color = Vars)) +\n  geom_line() +\n  facet_wrap(~Vars)\n\n\n\n\n\niris_stats_long %&gt;% \n  pivot_wider(names_from = Metrica,\n              values_from = Linhas)"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  }
]